//
// ErrorTest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ErrorTest: Codable, JSONEncodable, Hashable {

    public var arbitraryString: String?
    public var arbitraryInt: Int?
    public var forceServerError: Bool?

    public init(arbitraryString: String? = nil, arbitraryInt: Int? = nil, forceServerError: Bool? = nil) {
        self.arbitraryString = arbitraryString
        self.arbitraryInt = arbitraryInt
        self.forceServerError = forceServerError
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case arbitraryString = "arbitrary_string"
        case arbitraryInt = "arbitrary_int"
        case forceServerError = "force_server_error"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(arbitraryString, forKey: .arbitraryString)
        try container.encodeIfPresent(arbitraryInt, forKey: .arbitraryInt)
        try container.encodeIfPresent(forceServerError, forKey: .forceServerError)
    }
}

